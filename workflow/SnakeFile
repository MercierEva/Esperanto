# -*- coding: utf-8 -*-
import os
import subprocess
import os
from Bio import SeqIO
import re
import gzip
import time
import pandas as pd

def count_seq(input_file):
    proc = subprocess.Popen("zcat " + input_file + " | wc -l ", shell=True, stdout=subprocess.PIPE) 
    out, err = proc.communicate()
    count= int(out.decode('utf-8'))//4
    return count 

def filesCheck(wildcards):
    files = checkpoints.filtration.get(**wildcards).output[0]
    pass_list=[]
    if int(count_seq(files)) > 75 :           
        pass_list = expand(config["folder"]+"07_stats/report_{sample}_final.tsv", sample= wildcards.sample ) 
        return pass_list
    else:     
        pass_list = expand(config["folder"]+"07_stats/Temp/{sample}_state.temp", sample=wildcards.sample)
        return pass_list

configfile : "config_wf.yaml"
include: "rule_workflow.smk"

onsuccess:
    print("Le workflow est fini; vous pouvez récupérer les fasta ci-dessous")

onerror:
    print("Le workflow ne s'est pas déroulé comme prévu...")



rule all:
    input:
        expand(config["folder"]+"07_stats/Temp/{sample}_finished.temp", sample=config["samples"])
               

